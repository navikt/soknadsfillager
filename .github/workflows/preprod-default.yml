name: Build-Deploy-Default
on:
  push:
    branches-ignore:
      - 'q0-pipeline'
      - 'q1-pipeline'
      - 'master'
    paths-ignore:
      - '**.md'
  pull_request:
    branches-ignore:
      - 'q0-pipeline'
      - 'q1-pipeline'
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/workflows/main.yml'
      - '.github/workflows/preprod-pipeline.yml'

jobs:
  bygg-app-preprod-default:
    name: Bygg app/image, push til github
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "IMAGE_REGISTRY=docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##/*})" >> $GITHUB_ENV
          echo "IMAGE_VERSION=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})" >> $GITHUB_ENV
      - name: Read/save .m2 cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Maven build
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn install --file pom.xml
      - name: Create Docker tag
        env:
          NAME: soknadsfillager
        run: |
          echo "docker.pkg.github.com"/"$GITHUB_REPOSITORY"/"$NAME" > .docker_image
          echo "$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" > .docker_tag
      - name: Build docker image
        run: docker build . --pull -t $(cat .docker_image):$(cat .docker_tag)
      - name: Login and push docker image
        run: |
          echo "$GITHUB_ACCESS_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push $(cat .docker_image):$(cat .docker_tag)
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pass tag file to next job.
        uses: actions/upload-artifact@v1
        with:
          name: docker_tag
          path: .docker_tag

  deploy-default:
    name: Deploy to default
    needs: bygg-app-preprod-default
    if: github.ref != 'refs/heads/master' || github.ref !='refs/heads/q0-pipeline' || github.ref !='refs/heads/q1-pipeline'
    runs-on: ubuntu-latest
    steps:
      - name: Download tag file
        uses: actions/download-artifact@v1
        with:
          name: docker_tag
      - name: Unpack
        run: |
          cp docker_tag/.docker_tag .
          TAG=$(cat .docker_tag)
          echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: .nais/nais-preprod.yml
          VAR: app_version=${{env.TAG}}
          DRY_RUN: false
          IMAGE: docker.pkg.github.com/${{ github.repository }}/soknadsfillager:${{env.TAG}}
