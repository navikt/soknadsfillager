server:
  port: 9042

management:
  endpoint:
    health:
      show-details: always
  endpoints.web:
    exposure:
      include: info, health, metrics, refresh, prometheus
    base-path: "/internal"
  metrics:
    export:
      prometheus:
        enabled: true

springdoc:
  packagesToScan: no.nav.soknad.arkivering.soknadsfillager


---
spring:
  config:
    activate:
      on-profile: test | local

  codec:
    max-in-memory-size: 50MB

  flyway:
    enabled: true

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?user=postgres&password=postgres

status_log_url: "https://logs.adeo.no"

---
spring:
  config:
    activate:
      on-profile: dev | prod | docker

  servlet:
    multipart:
      max-file-size: 300MB
      max-request-size: 300MB

  flyway:
    enabled: true
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 20
      connection-timeout: 10000
      max-lifetime: 60001
      leak-detection-threshold: 60000
    dbcp2:
      test-on-borrow: true
      validation-query: "SELECT 1"

status_log_url: ${STATUS_LOG_URL}

no.nav.security.jwt:
  issuer:
    azure:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      #https://soknad-oauth2-mock.dev.nav.no/default/.well-known/openid-configuration
      accepted_audience: ${AZURE_APP_CLIENT_ID}
